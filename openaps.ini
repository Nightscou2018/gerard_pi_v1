[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "pebble"]
vendor = openaps.vendors.process
extra = pebble.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/cgm-glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "monitor/ns-glucose.json"]
device = ns-glucose
remainder = 
use = shell
json_default = True
reporter = text

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = pump
use = status
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 6.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = 

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = iob
remainder = 

[report "monitor/meal.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = meal
remainder = 

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
carb_ratios = settings/carb_ratios.json
max_iob = max_iob.json
device = get-profile
remainder = 
isf = settings/insulin_sensitivities.json

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
iob = monitor/iob.json
device = determine-basal
offline = online
remainder = 
meal = monitor/meal.json
glucose = monitor/glucose.json

[report "enact/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[report "upload/pebble.json"]
suggested = enact/suggested.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
device = pebble
glucose = monitor/glucose.json
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[alias]
invoke = report invoke
preflight = ! bash -c "rm -f monitor/clock.json && echo -n \"PREFLIGHT \" && openaps report invoke monitor/clock.json 2>/dev/null >/dev/null && grep -q T monitor/clock.json && echo OK || ( ( mm-stick warmup 2>&1 || sudo oref0-reset-usb ) | egrep -v \"^  \"; echo FAIL; openaps get-bg; sleep 120; exit 1 )"
monitor-cgm = report invoke monitor/cgm-glucose.json
get-ns-glucose = report invoke monitor/ns-glucose.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/iob.json monitor/meal.json monitor/reservoir.json monitor/battery.json monitor/status.json
ns-meal-carbs = ! bash -c "egrep -q carbs.:0, monitor/meal.json && curl -m 30 -s \"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\[created_at\]\[\$gte\]=`date -d \"3 hours ago\" -Iminutes`&find\[carbs\]\[\$exists\]=true\" > monitor/carbhistory.json && oref0-meal monitor/pumphistory-zoned.json settings/profile.json monitor/clock-zoned.json monitor/carbhistory.json > monitor/meal.json; exit 0"
get-settings = report invoke settings/model.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json settings/carb_ratios.json settings/profile.json
get-bg = ! bash -c "( openaps monitor-cgm 2>/dev/null | tail -1 && cat monitor/cgm-glucose.json | json -c \"minAgo=(new Date()-new Date(this.display_time.replace(\\\"T\\\", \\\" \\\")))/60/1000; return minAgo < 10 && minAgo > -5 && this.glucose > 30\" | grep -q glucose && rsync -rtu monitor/cgm-glucose.json monitor/glucose.json ) || ( openaps get-ns-glucose && grep -q glucose monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
gather = ! bash -c "rm monitor/*; ( openaps get-bg | egrep \"reporting|Copied\" && echo -n R && openaps report invoke monitor/status.json 2>/dev/null >/dev/null && echo -n e && test $(cat monitor/status.json | json bolusing) == false && echo -n fr && openaps monitor-pump >/dev/null && echo -n esh && ( openaps ns-meal-carbs && echo ed ) || (echo; sleep 60; exit 1)) 2>/dev/null"
wait-for-bg = ! bash -c "cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg >/dev/null; done"
enact = ! bash -c "rm enact/suggested.json; openaps invoke enact/suggested.json && if (cat enact/suggested.json && grep -q duration enact/suggested.json); then ( rm enact/enacted.json; openaps invoke enact/enacted.json || openaps invoke enact/enacted.json ) 2>&1 | egrep -v \"^  \" && cat enact/enacted.json; else echo No action required; fi"
wait-loop = ! bash -c "openaps preflight && openaps gather && openaps enact && openaps report invoke monitor/temp_basal.json 2>/dev/null >/dev/null && openaps upload && openaps get-settings 2>/dev/null >/dev/null && openaps wait-for-bg && openaps enact && openaps upload-ns-status >/dev/null"
loop = ! bash -c "openaps preflight && openaps gather && openaps get-settings 2>/dev/null >/dev/null && openaps enact; openaps upload"
retry-loop = ! bash -c "openaps wait-loop || until( ! mm-stick warmup 2>&1 | egrep -v \"^  \" || ! openaps preflight || openaps loop); do sleep 10; done"
pebble = ! bash -c "grep -q iob monitor/iob.json && grep -q absolute enact/suggested.json && openaps report invoke upload/pebble.json"
prep-pumphistory-entries = ! bash -c "cat monitor/pumphistory-zoned.json | json -e \"this.dateString = this.timestamp\" | json -e \"this.medtronic = this._type\" | json -e \"this.type = \\\"medtronic\\\"\" | json -e \"this.date = new Date(Date.parse(this.timestamp)).getTime( )\" > upload/pumphistory-entries.json"
upload-pumphistory-entries = ! bash -c "openaps prep-pumphistory-entries && ns-upload-entries upload/pumphistory-entries.json"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
format-ns-status = ! bash -c "ns-status monitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json > upload/ns-status.json"
upload-ns-status = ! bash -c "grep -q iob monitor/iob.json && grep -q absolute enact/suggested.json && openaps format-ns-status && grep -q iob upload/ns-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json upload/ns-status.json"
upload = ! bash -c "echo -n Upload && ( openaps upload-ns-status; openaps report invoke enact/suggested.json 2>/dev/null; openaps pebble; openaps upload-pumphistory-entries; openaps upload-recent-treatments ) >/dev/null && echo ed"

